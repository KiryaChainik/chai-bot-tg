import telegram
from telegram import Update
from telegram.ext import ContextTypes

from utils.logger import debug_log, debug_log_sync


# –ü–û–î–°–ö–ê–ó–ö–ò –ü–û –ö–û–ú–ê–ù–î–ê–ú
async def set_bot_commands(application):
    group_ids = [-1002443521655]  # ‚Üê —Å—é–¥–∞ –¥–æ–±–∞–≤–ª—è–π –≤—Å–µ –Ω—É–∂–Ω—ã–µ chat_id

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫
    await application.bot.set_chat_menu_button(
        menu_button=telegram.MenuButtonCommands()
    )
    debug_log_sync("[CMD] ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥")

    for chat_id in group_ids:
        debug_log_sync(f"[CMD] ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≥—Ä—É–ø–ø—ã {chat_id}")

        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥—Ä—É–ø–ø–µ
        await application.bot.set_my_commands(
            commands=[
                telegram.BotCommand("menu", "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"),
                telegram.BotCommand("rules", "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã"),
            ],
            scope=telegram.BotCommandScopeChat(chat_id=chat_id),
        )

        # –ö–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
        await application.bot.set_my_commands(
            commands=[
                telegram.BotCommand("menu", "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"),
                telegram.BotCommand("rules", "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã"),
                telegram.BotCommand("set_rules", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞"),
                telegram.BotCommand("ban", "–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                telegram.BotCommand("unban", "–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                telegram.BotCommand("kick", "–ò—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                telegram.BotCommand("mute", "–û–±–µ–∑–∑–≤—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                telegram.BotCommand("unmute", "–°–Ω—è—Ç—å –º—É—Ç"),
            ],
            scope=telegram.BotCommandScopeChatAdministrators(chat_id=chat_id),
        )

    # –†–µ–∑–µ—Ä–≤: –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    await application.bot.set_my_commands(
        commands=[
            telegram.BotCommand("rules", "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã"),
        ],
        scope=telegram.BotCommandScopeDefault(),
    )

    debug_log_sync("[CMD] ‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤–æ –≤—Å–µ—Ö —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö")


# –û–ë–†–ê–ë–û–¢–ß–ò–ö –ù–ê–ñ–ê–¢–ò–ô –ö–ù–û–ü–û–ö –ú–ï–ù–Æ –í–°–ï–• –ö–û–ú–ê–ù–î
async def handle_menu_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user = query.from_user
    data = query.data

    await query.answer()

    if data == "menu_rules":
        await query.message.reply_text("üìú –í–æ—Ç –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã: ...")
        await debug_log(
            context, f"[MENU] üì• {user.full_name} ({user.id}) –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É '–ü—Ä–∞–≤–∏–ª–∞'"
        )
    elif data == "menu_rights":
        await query.message.reply_text(
            "üîê –£ –≤–∞—Å –µ—Å—Ç—å –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞. –ï—Å–ª–∏ –≤—ã –∞–¥–º–∏–Ω ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /ban, /mute –∏ –¥—Ä—É–≥–∏–µ."
        )
        await debug_log(
            context, f"[MENU] üì• {user.full_name} ({user.id}) –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É '–ú–æ–∏ –ø—Ä–∞–≤–∞'"
        )


# –ü–û–õ–£–ß–ï–ù–ò–ï ID –ß–ê–¢–ê –ü–û –ö–û–ú–ê–ù–î–ï
async def show_chat_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.effective_chat
    user = update.effective_user

    await update.message.reply_text(f"chat_id: {chat.id}")
    await debug_log(
        context, f"[CHAT_ID] ‚ÑπÔ∏è {user.full_name} ({user.id}) –∑–∞–ø—Ä–æ—Å–∏–ª chat_id: {chat.id}"
    )


# –ü–û–õ–£–ß–ï–ù–ò–ï ID –¢–†–ï–î–ê –ü–û –ö–û–ú–ê–ù–î–ï
async def thread_id_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message or update.channel_post
    if not message:
        await debug_log(
            context, "[THREAD_ID] ‚ö†Ô∏è –ù–µ—Ç message ‚Äî –Ω–∏ –æ–±—ã—á–Ω–æ–≥–æ, –Ω–∏ channel_post"
        )
        return

    chat = message.chat
    user = message.from_user or message.sender_chat

    if not chat.is_forum:
        await message.reply_text("‚ùå –≠—Ç–æ –Ω–µ —Ñ–æ—Ä—É–º. –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–º–∞—Ö.")
        await debug_log(
            context,
            f"[THREAD_ID] ‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤–Ω–µ —Ñ–æ—Ä—É–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {user.full_name if hasattr(user, 'full_name') else user.title}",
        )
        return

    if not message.message_thread_id:
        await message.reply_text("‚ö†Ô∏è –≠—Ç–æ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–º—ã —Ñ–æ—Ä—É–º–∞.")
        await debug_log(
            context, f"[THREAD_ID] ‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤–Ω–µ —Ç–µ–º—ã. –ß–∞—Ç: {chat.id}"
        )
        return

    await message.reply_text(
        f"üìå ID —ç—Ç–æ–π —Ç–µ–º—ã (message_thread_id): {message.message_thread_id}"
    )
    await debug_log(
        context,
        f"[THREAD_ID] üìå –ó–∞–ø—Ä–æ—Å –æ—Ç {user.full_name if hasattr(user, 'full_name') else user.title}: {message.message_thread_id}",
    )
