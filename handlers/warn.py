from datetime import datetime, timedelta

from pytz import timezone
from sqlalchemy import delete, select
from sqlalchemy import insert
from telegram import Update, ChatPermissions
from telegram.ext import ContextTypes

from database import async_session
from models.events_log import EventLog
from models.users import User, UserStatus
from models.violations import Violation
from utils.logger import debug_log


async def warn_user(
        update: Update, context: ContextTypes.DEFAULT_TYPE, auto_delete: bool = False
):
    message = update.message
    chat = update.effective_chat
    sender = update.effective_user
    target = message.reply_to_message.from_user if message.reply_to_message else None
    if message.text.startswith("!warn"):
        parts = message.text.split(maxsplit=1)
        reason = parts[1] if len(parts) > 1 else "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"
    else:
        reason = " ".join(context.args) if context.args else "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"

    if not target:
        await message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π /warn –∏–ª–∏ !warn –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    async with async_session() as session:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ users
        result = await session.execute(select(User).where(User.user_id == target.id))
        existing_user = result.scalar_one_or_none()

        # –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º
        if not existing_user:
            await session.execute(
                insert(User).values(
                    user_id=target.id,
                    first_name=target.first_name,
                    last_name=target.last_name or None,
                    status=UserStatus.active,
                )
            )
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –≤–∞—Ä–Ω–µ –≤ violations
        await session.execute(
            insert(Violation).values(
                user_id=target.id,
                reason=reason,
                created_at=datetime.utcnow(),
            )
        )

        # 2. –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–Ω–æ–≤
        result = await session.execute(
            select(Violation).where(Violation.user_id == target.id)
        )
        warn_count = len(result.fetchall())

        # 3. –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ events_log
        await session.execute(
            insert(EventLog).values(
                user_id=target.id,
                event_type="warn",
                event_details=f"–ü—Ä–∏—á–∏–Ω–∞: {reason}" if reason else "",
                created_at=datetime.utcnow(),
            )
        )

        await session.commit()

        # 4. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ DEBUG
        await debug_log(
            context,
            f"[WARN] ‚ö†Ô∏è {target.full_name} (ID: {target.id}) –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ #{warn_count}. –ü—Ä–∏—á–∏–Ω–∞: {reason}",
        )

        # 5. –û—Ç–≤–µ—Ç –≤ —á–∞—Ç
        warn_text = (
            f"‚ö†Ô∏è –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!\n" f"–£ –≤–∞—Å {warn_count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.\n"
        )
        if reason != "–ë–µ–∑ –ø—Ä–∏—á–∏–Ω—ã":
            warn_text += f"–ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
        warn_text += (
            f"\n–ù–∞ 4 –∏ 8 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è—Ö ‚Äî –º—É—Ç –Ω–∞ 5 –¥–Ω–µ–π.\n"
            f"–ù–∞ 10 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è—Ö ‚Äî –±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞."
        )
        await message.reply_text(warn_text)

        # 6. –ê–≤—Ç–æ–º—É—Ç –Ω–∞ 4 –∏ 8 –≤–∞—Ä–Ω–µ
        if warn_count in [4, 8]:
            until_date = datetime.utcnow() + timedelta(days=5)
            await context.bot.restrict_chat_member(
                chat_id=chat.id,
                user_id=target.id,
                permissions=ChatPermissions(can_send_messages=False),
                until_date=until_date,
            )
            await session.execute(
                insert(EventLog).values(
                    user_id=target.id,
                    event_type="auto_mute",
                    event_details=f"–ú—É—Ç –Ω–∞ 5 –¥–Ω–µ–π (–≤–∞—Ä–Ω #{warn_count})",
                    created_at=datetime.utcnow(),
                )
            )
            await session.commit()

            # —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –æ–± –æ–±–µ–∑–∑–≤—É—á–∏–≤–∞–Ω–∏–∏
            msk_time = until_date.replace(tzinfo=timezone("UTC")).astimezone(
                timezone("Europe/Moscow")
            )
            await message.reply_text(
                f"üîá {target.full_name} –±—ã–ª –æ–±–µ–∑–∑–≤—É—á–µ–Ω –Ω–∞ 5 –¥–Ω–µ–π, –¥–æ {msk_time.strftime('%Y-%m-%d %H:%M:%S')} –ø–æ –ú–°–ö."
            )

            await debug_log(
                context,
                f"[WARN] ü§ê –ê–≤—Ç–æ–º—É—Ç {target.full_name} –Ω–∞ 5 –¥–Ω–µ–π (–≤–∞—Ä–Ω #{warn_count})",
            )

        # 7. –ê–≤—Ç–æ–±–∞–Ω –Ω–∞ 10 –≤–∞—Ä–Ω–µ
        if warn_count == 10:
            await context.bot.ban_chat_member(chat.id, target.id)
            await session.execute(
                insert(EventLog).values(
                    user_id=target.id,
                    event_type="auto_ban",
                    event_details="–ë–∞–Ω –∑–∞ 10 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π",
                    created_at=datetime.utcnow(),
                )
            )
            await session.commit()

            await message.reply_text(f"üî® {target.full_name} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.")

            await debug_log(
                context, f"[WARN] üî® –ê–≤—Ç–æ–±–∞–Ω {target.full_name} –∑–∞ 10 –≤–∞—Ä–Ω–æ–≤"
            )

    # 8. –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (!warn)
    if auto_delete:
        try:
            await message.delete()
        except:
            pass


async def full_unwarn(
        update: Update, context: ContextTypes.DEFAULT_TYPE, auto_delete: bool = False
):
    message = update.message

    # –¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî —ç—Ç–æ —Ç–æ—Ç, –Ω–∞ —á—å—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π
    target = message.reply_to_message.from_user if message.reply_to_message else None
    if not target:
        await message.reply_text(
            "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        )
        return

    async with async_session() as session:
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await session.execute(delete(Violation).where(Violation.user_id == target.id))
        await session.execute(
            insert(EventLog).values(
                user_id=target.id,
                event_type="full_unwarn",
                event_details="–°–Ω—è—Ç—ã –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
                created_at=datetime.utcnow(),
            )
        )
        await session.commit()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å (–ø–æ –∏–¥–µ–µ ‚Äî 0)
        result = await session.execute(
            select(Violation).where(Violation.user_id == target.id)
        )
        remaining = len(result.fetchall())

    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.reply_text(
        f"‚úÖ –í—ã –±—ã–ª–∏ –ø–æ–º–∏–ª–æ–≤–∞–Ω—ã –∏ –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –±—ã–ª–∏ —Å–Ω—è—Ç—ã. –ö–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π = {remaining}"
    )

    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ !–∫–æ–º–∞–Ω–¥—É
    if auto_delete:
        try:
            await message.delete()
        except:
            pass


async def unwarn(
        update: Update, context: ContextTypes.DEFAULT_TYPE, auto_delete: bool = False
):
    message = update.message
    target = message.reply_to_message.from_user if message.reply_to_message else None
    if not target:
        await message.reply_text(
            "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        )
        return

    async with async_session() as session:
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        result = await session.execute(
            select(Violation)
            .where(Violation.user_id == target.id)
            .order_by(Violation.created_at.asc())
        )
        violations = result.scalars().all()

        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ ‚Äî —É–¥–∞–ª—è–µ–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ
        if violations:
            await session.delete(violations[0])
            await session.execute(
                insert(EventLog).values(
                    user_id=target.id,
                    event_type="unwarn",
                    event_details="–°–Ω—è—Ç–æ 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
                    created_at=datetime.utcnow(),
                )
            )
            await session.commit()

        # –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å
        result = await session.execute(
            select(Violation).where(Violation.user_id == target.id)
        )
        remaining = len(result.fetchall())

    await message.reply_text(
        f"‚ûñ –° –≤–∞—Å —Å–Ω—è—Ç–æ 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ö–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π = {remaining}"
    )

    if auto_delete:
        try:
            await message.delete()
        except:
            pass


async def unwarn_all_users(
        update: Update, context: ContextTypes.DEFAULT_TYPE, auto_delete: bool = False
):
    message = update.message
    user = update.effective_user
    user_id = user.id if user else None

    async with async_session() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ user_id, –∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î ‚Äî —Å–æ–∑–¥–∞–µ–º
        if user_id is not None:
            result = await session.execute(select(User).where(User.user_id == user_id))
            if not result.scalar_one_or_none():
                await session.execute(
                    insert(User).values(
                        user_id=user_id,
                        first_name=user.first_name,
                        last_name=user.last_name or None,
                        status=UserStatus.active,
                    )
                )

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        await session.execute(delete(Violation))

        # –ï—Å–ª–∏ user_id –µ—Å—Ç—å ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        if user_id is not None:
            await session.execute(
                insert(EventLog).values(
                    user_id=user_id,
                    event_type="unwarn_all_users",
                    event_details="–°–Ω—è—Ç—ã –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                    created_at=datetime.utcnow(),
                )
            )

        await session.commit()

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç
    await message.reply_text("üôå –í—Å–µ –±—ã–ª–∏ –ø–æ–º–∏–ª–æ–≤–∞–Ω—ã. –ò—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–±–Ω—É–ª–µ–Ω—ã!")

    # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî —É–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
    if auto_delete:
        try:
            await message.delete()
        except:
            pass
